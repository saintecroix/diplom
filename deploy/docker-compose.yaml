networks:
  app:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:

services:
  db:
    image: postgres:17.4-alpine3.20
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
      - ./database/create.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - app

  webui:
    build:
      context: ..
      dockerfile: ./cmd/webUI/docker/Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - app
    depends_on:
      bus_log:
        condition: service_started

  bus_log:
    build:
      context: ..
      dockerfile: ./cmd/inputConvert/docker/Dockerfile
    container_name: inputconvert
    restart: always
    ports:
      - "50051:50051"
    environment:
      DATABASE_URL: postgres://keril:pass@db:5432/my_db
    depends_on:
      - db
    networks:
      - app