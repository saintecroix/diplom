// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: inputconvert.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConvertExcelDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileData      []byte                 `protobuf:"bytes,1,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertExcelDataRequest) Reset() {
	*x = ConvertExcelDataRequest{}
	mi := &file_inputconvert_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertExcelDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertExcelDataRequest) ProtoMessage() {}

func (x *ConvertExcelDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inputconvert_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertExcelDataRequest.ProtoReflect.Descriptor instead.
func (*ConvertExcelDataRequest) Descriptor() ([]byte, []int) {
	return file_inputconvert_proto_rawDescGZIP(), []int{0}
}

func (x *ConvertExcelDataRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

func (x *ConvertExcelDataRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type ConvertExcelDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []string               `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConvertExcelDataResponse) Reset() {
	*x = ConvertExcelDataResponse{}
	mi := &file_inputconvert_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConvertExcelDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConvertExcelDataResponse) ProtoMessage() {}

func (x *ConvertExcelDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inputconvert_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConvertExcelDataResponse.ProtoReflect.Descriptor instead.
func (*ConvertExcelDataResponse) Descriptor() ([]byte, []int) {
	return file_inputconvert_proto_rawDescGZIP(), []int{1}
}

func (x *ConvertExcelDataResponse) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ConvertExcelDataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_inputconvert_proto protoreflect.FileDescriptor

const file_inputconvert_proto_rawDesc = "" +
	"\n" +
	"\x12inputconvert.proto\x12\x03api\"R\n" +
	"\x17ConvertExcelDataRequest\x12\x1b\n" +
	"\tfile_data\x18\x01 \x01(\fR\bfileData\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\"J\n" +
	"\x18ConvertExcelDataResponse\x12\x18\n" +
	"\aresults\x18\x01 \x03(\tR\aresults\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2h\n" +
	"\x13InputConvertService\x12Q\n" +
	"\x10ConvertExcelData\x12\x1c.api.ConvertExcelDataRequest\x1a\x1d.api.ConvertExcelDataResponse\"\x00B#Z!github.com/saintecroix/diplom/apib\x06proto3"

var (
	file_inputconvert_proto_rawDescOnce sync.Once
	file_inputconvert_proto_rawDescData []byte
)

func file_inputconvert_proto_rawDescGZIP() []byte {
	file_inputconvert_proto_rawDescOnce.Do(func() {
		file_inputconvert_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inputconvert_proto_rawDesc), len(file_inputconvert_proto_rawDesc)))
	})
	return file_inputconvert_proto_rawDescData
}

var file_inputconvert_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_inputconvert_proto_goTypes = []any{
	(*ConvertExcelDataRequest)(nil),  // 0: api.ConvertExcelDataRequest
	(*ConvertExcelDataResponse)(nil), // 1: api.ConvertExcelDataResponse
}
var file_inputconvert_proto_depIdxs = []int32{
	0, // 0: api.InputConvertService.ConvertExcelData:input_type -> api.ConvertExcelDataRequest
	1, // 1: api.InputConvertService.ConvertExcelData:output_type -> api.ConvertExcelDataResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_inputconvert_proto_init() }
func file_inputconvert_proto_init() {
	if File_inputconvert_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inputconvert_proto_rawDesc), len(file_inputconvert_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inputconvert_proto_goTypes,
		DependencyIndexes: file_inputconvert_proto_depIdxs,
		MessageInfos:      file_inputconvert_proto_msgTypes,
	}.Build()
	File_inputconvert_proto = out.File
	file_inputconvert_proto_goTypes = nil
	file_inputconvert_proto_depIdxs = nil
}
